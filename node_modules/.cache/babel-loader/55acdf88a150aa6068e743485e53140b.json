{"ast":null,"code":"var _jsxFileName = \"/Users/yosephkurniasoenggoro/Documents/GitHub/To-Do-Web-App/src/components/AddTaskForm.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport addButton from \"../static/images/plus.svg\";\nimport '../static/css/AddTaskForm.css';\nimport axios from 'axios';\nimport deleteButton from \"../static/images/error.svg\";\n\nclass AddTaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TaskInput: \"\",\n      TaskList: [],\n      TaskJSON: {},\n      countTask: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      TaskInput: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Clear the data after clicking the submit button\n\n    this.setState({\n      TaskInput: ''\n    });\n    const taskJSON = this.state.TaskJSON;\n    const taskList = this.state.TaskList;\n    const newCountTask = parseInt(this.state.countTask) + 1; // Add the Inputed Task into the JSON and Array data\n\n    taskJSON[\"task \" + newCountTask] = this.state.TaskInput;\n    taskList.push(this.state.TaskInput);\n    this.setState({\n      TaskJSON: taskJSON,\n      TaskList: taskList,\n      countTask: newCountTask\n    });\n    console.log(\"Successfully Submitted\");\n    axios.post(\"http://localhost:5000/updateTable/\" + this.props.username, {\n      tasks: this.state.TaskJSON\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n  }\n\n  handleDelete(event) {\n    event.preventDefault();\n    const key = event.target.id;\n    const taskJSON = this.state.TaskJSON;\n    const taskList = this.state.TaskList;\n    delete taskJSON[\"task \" + (parseInt(key) + 1)];\n    taskList.splice(key, 1);\n    let count = 1;\n    const newTaskJSON = {};\n\n    for (const task in taskJSON) {\n      newTaskJSON[\"task \" + count] = taskJSON[task];\n      count += 1;\n    }\n\n    this.setState({\n      TaskList: taskList,\n      TaskJSON: newTaskJSON\n    });\n    axios.post(\"http://localhost:5000/updateTable/\" + this.props.username, {\n      tasks: newTaskJSON\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/readTable/\" + this.props.username).then(res => {\n      const output = res.data[0];\n      console.log(output);\n      console.log(\"Successfully Fetch\");\n      const tasks = [];\n      const tasksJSON = JSON.parse(output.tasks);\n\n      for (const task in tasksJSON) {\n        tasks.push(tasksJSON[task]);\n      }\n\n      this.setState({\n        TaskList: tasks,\n        TaskJSON: tasksJSON,\n        countTask: Object.keys(tasksJSON).length\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      className: \"add-task-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"add-task-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"add-task-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 11,\n      sm: 10,\n      xs: 9,\n      className: \"add-task-col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      placeholder: \"Add Task\",\n      value: this.state.TaskInput,\n      onChange: this.handleChange,\n      style: {\n        border: \"1.3px solid grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 1,\n      sm: 2,\n      xs: 3,\n      className: \"add-task-col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: addButton,\n      onClick: this.handleSubmit,\n      className: \"add-button\",\n      width: \"35px\",\n      height: \"35px\",\n      alt: \"Add Button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))))))), React.createElement(Container, {\n      fluid: true,\n      className: \"to-do-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"to-do-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"to-do-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"to-do-col\",\n      style: {\n        backgroundColor: \"#292b2c\",\n        color: \"white\",\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Unfinished Task\")), this.state.TaskList.map((value, key) => React.createElement(Row, {\n      style: {\n        borderBottom: \"1px solid grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 10,\n      key: key,\n      className: \"to-do-col\",\n      style: {\n        paddingLeft: \"17.5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, value), React.createElement(Col, {\n      xs: 2,\n      className: \"to-do-button-col\",\n      style: {\n        paddingLeft: \"7%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: deleteButton,\n      id: key,\n      onClick: this.handleDelete,\n      className: \"delete-button\",\n      width: \"35px\",\n      height: \"35px\",\n      alt: \"Delete Button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nexport default AddTaskForm;","map":{"version":3,"sources":["/Users/yosephkurniasoenggoro/Documents/GitHub/To-Do-Web-App/src/components/AddTaskForm.js"],"names":["React","Container","Row","Col","Form","axios","AddTaskForm","Component","constructor","props","state","TaskInput","TaskList","TaskJSON","countTask","handleChange","bind","handleSubmit","handleDelete","event","setState","target","value","preventDefault","taskJSON","taskList","newCountTask","parseInt","push","console","log","post","username","tasks","then","res","data","key","id","splice","count","newTaskJSON","task","componentDidMount","get","output","tasksJSON","JSON","parse","Object","keys","length","render","border","addButton","backgroundColor","color","margin","map","borderBottom","paddingLeft","deleteButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport addButton from '../static/images/plus.svg';\nimport '../static/css/AddTaskForm.css';\nimport axios from 'axios';\nimport deleteButton from '../static/images/error.svg';\n\nclass AddTaskForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            TaskInput: \"\",\n            TaskList: [],\n            TaskJSON: {},\n            countTask: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ TaskInput: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        // Clear the data after clicking the submit button\n        this.setState({TaskInput: ''})\n\n        const taskJSON = this.state.TaskJSON;\n        const taskList = this.state.TaskList;\n        const newCountTask = parseInt(this.state.countTask) + 1;\n\n        // Add the Inputed Task into the JSON and Array data\n        taskJSON[\"task \" + (newCountTask)] = this.state.TaskInput;\n        taskList.push(this.state.TaskInput);\n\n        this.setState({\n            TaskJSON: taskJSON,\n            TaskList: taskList,\n            countTask: newCountTask})\n\n        console.log(\"Successfully Submitted\");\n\n        axios.post(`http://localhost:5000/updateTable/` + this.props.username, {tasks: this.state.TaskJSON})\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n        })\n    }\n\n    handleDelete(event) {\n        event.preventDefault();\n\n        const key = event.target.id;\n\n        const taskJSON = this.state.TaskJSON;\n        const taskList = this.state.TaskList;\n\n        delete taskJSON[\"task \" + (parseInt(key) + 1)];\n        taskList.splice(key, 1);\n        \n        let count = 1;\n        const newTaskJSON = {};\n\n        for (const task in taskJSON) {\n            newTaskJSON[\"task \" + count] = taskJSON[task];\n            count += 1;\n        }\n\n        this.setState({TaskList: taskList, TaskJSON: newTaskJSON});\n\n        axios.post(`http://localhost:5000/updateTable/` + this.props.username, {tasks: newTaskJSON})\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n        })\n\n    }\n\n    componentDidMount() {\n        axios.get(`http://localhost:5000/readTable/` + this.props.username)\n        .then(res => {\n            const output = res.data[0];\n            console.log(output);\n            console.log(\"Successfully Fetch\");\n\n            const tasks = [];\n            const tasksJSON = JSON.parse(output.tasks)\n\n            for (const task in tasksJSON) {\n                tasks.push(tasksJSON[task]);\n            }\n\n            this.setState({\n                TaskList: tasks, \n                TaskJSON: tasksJSON,\n                countTask: Object.keys(tasksJSON).length\n            });\n\n        })      \n    }\n  \n    render() {\n    return (\n    <div>\n    <Container fluid = {true} className = \"add-task-container\">\n        <Row>\n            <Col>\n                <Container className = \"add-task-content\">\n                    <Row className = \"add-task-row\">\n                    <Col md = {11} sm = {10} xs = {9} className = \"add-task-col-1\">\n                        <Form.Control placeholder=\"Add Task\" value = {this.state.TaskInput} onChange = {this.handleChange} style = {{border: \"1.3px solid grey\"}}/>\n                    </Col>\n                    <Col md = {1} sm = {2} xs = {3} className = \"add-task-col-2\">\n                        <img src = {addButton} onClick = {this.handleSubmit} className = \"add-button\" width = \"35px\" height = \"35px\" alt = \"Add Button\"/>\n                    </Col>\n                    </Row>\n                </Container>\n            </Col>\n        </Row>\n    </Container>\n\n    <Container fluid = {true} className = \"to-do-container\">\n        <Row>\n            <Col>\n                <Container className = \"to-do-content\">\n                    <Row className = \"to-do-row\">\n                        <Col className = \"to-do-col\" style = {{backgroundColor: \"#292b2c\", color: \"white\", margin: 0}}>\n                            Unfinished Task\n                        </Col>\n                    </Row>\n                    {this.state.TaskList.map((value, key) => (\n                    <Row style = {{borderBottom: \"1px solid grey\"}}>\n                        <Col xs = {10} key = {key} className = \"to-do-col\" style = {{paddingLeft: \"17.5%\"}}>\n                            {value}\n                        </Col>\n                        <Col xs = {2} className = \"to-do-button-col\" style = {{paddingLeft: \"7%\"}}>\n                            <img src = {deleteButton} id = {key} onClick = {this.handleDelete} className = \"delete-button\" width = \"35px\" height = \"35px\" alt = \"Delete Button\"/>\n                        </Col>\n                    </Row>\n                    ))}\n                </Container>\n            </Col>\n        </Row>\n    </Container>\n    </div>\n)}}\n\nexport default AddTaskForm;"]},"metadata":{},"sourceType":"module"}